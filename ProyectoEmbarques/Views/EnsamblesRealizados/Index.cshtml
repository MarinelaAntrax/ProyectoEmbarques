@model ProyectoEmbarques.Models.Shipping_RecordsViewModel
@{
    ViewBag.Title = "Sumario ";
}

<script src="~/Scripts/sweetalert2.all.js"></script>
<script src="~/Scripts/jszip.min.js"></script>
<link rel="stylesheet" href="~/Content/sweetalert2.css">
<div id="dialog"></div>
<script type="x/kendo-template" id="page-template">
    <div class="page-template">
        <div class="header">
            <div style="float: right"><span class="date">Date:@DateTime.Now.ToShortDateString()</span>Page #: pageNum # of #: totalPages # </div>
            BAE Systems - Pull Test
        </div>

        <div class="watermark">Propiedad de<br />BAE Systems</div>

        <div class="footer">
            Page #: pageNum # of #: totalPages #
        </div>
    </div>
</script>

<h2 class="page-header">@ViewBag.Title de Embarques</h2>

<div class="telerik-controls">
    @(Html.Kendo().Grid<ProyectoEmbarques.Models.Shipping_RecordsViewModel>()
            .Name("grid")
            .Selectable()
            .ToolBar(tools =>
            {
                tools.Template(@<text>
                    <a class="k-button k-button-icontext" href="@Url.Action("PackingList", "EnsamblesRealizados")"><span class="k-icon k-i-pdf"></span>Packing List</a>
                    @*<a class="k-button k-button-icontext" href="#" data-toggle="modal" data-target="#exampleModalCenter"><span class="k-icon k-i-pdf"></span>Packing List</a>*@
                    <a class="k-button k-button-icontext k-grid-excel" href="#"><span class="k-icon k-i-excel"></span>Exportar a Excel</a>
                    <a class="k-button k-button-icontext" href="@Url.Action("HotShot", "EnsamblesRealizados")"><span class="k-icon k-i-pdf"></span>HOT SHOT</a>
                    <div class="toolbar">
                        <label class="category-label"> De </label>
                        @(Html.Kendo().DatePicker()
                                .Name("Inicio")
                                .Value(DateTime.Today)
                                .Min("01/01/2018")
                                .HtmlAttributes(new { style = "width: 150px;" }) )
                        <label class="category-label"> &nbsp;&nbsp;&nbsp; a &nbsp;&nbsp;&nbsp; </label>
                        @(Html.Kendo().DatePicker()
                                .Name("Final")
                                .Value(DateTime.Today.AddDays(1))
                                .Min("07/01/2018")
                                .HtmlAttributes(new { style = "width: 150px;" }) )
                        <a id="btnSearch" class="k-button k-button-icontext" href="#"><span class="glyphicon glyphicon-search"></span> Buscar </a>
                    </div>
                </text>);
            })
            .Scrollable()
            .Reorderable(reordable => reordable.Columns(true))
            .Resizable(resize => resize.Columns(true))
            .Sortable()
            .Pageable()
            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
            .Groupable()
            .ColumnMenu()
            .Pageable(x => x.Numeric(true)
                .PreviousNext(true)
                .Refresh(true)
                .ButtonCount(5))
                .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Sumario").DisplayDeleteConfirmation("Estas a punto de eliminar un registro. ¿Deseas continuar?"))
            .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model => { model.Id(id => id.RecordID); })
                    .Events(events => events.Error("error_handler"))
                    .Update(up => up.Action("Update", "EnsamblesRealizados"))
                    .Read(read => read.Action("Read", "EnsamblesRealizados").Data("FilterByDate"))
                    .Destroy(destroy => destroy.Action("Destroy", "EnsamblesRealizados"))
                    .PageSize(3000))
            .Columns(columns =>
            {
                columns.Bound(o => o.RecordDate).Width(120).Filterable(false).Title("Fecha");
                columns.Bound(o => o.Shipping_Catalog_Products.ProductName).Width(170).Title("No. Parte");
                columns.Bound(o => o.Shipping_Catalog_Products.Areas.AreaName).Width(100).Title("Área").Hidden();
                columns.Bound(o => o.Shipping_Catalog_Products.ProductType).Width(150).Hidden();
                columns.Bound(o => o.Clients.ClientName).Title("Cliente").Width(180);
                columns.Bound(o => o.Clients.ClientCompany).Title("Compañía").Width(200).Hidden();
                columns.Bound(o => o.RecordWorkOrder).Width(120);
                columns.Bound(o => o.RecordTrackingId).Width(120);
                columns.Bound(o => o.RecordSerialNo).Width(100);
                columns.Bound(o => o.RecordQuantity).Width(120).Title("Cantidad");
                columns.Bound(o => o.RecordFedexTracking).Width(130).Title("FedEx Tracking").Hidden();
                columns.Bound(o => o.RecordControlBoxNo).Width(150).Hidden();
                columns.Bound(o => o.RecordPieceBoxNo).Width(140).Hidden();
                columns.Bound(o => o.CatalogShipmentType.ShipmentType).Width(140).Hidden();
                columns.Bound(o => o.RecordSeguritySeal1).Width(250).Hidden();
                columns.Bound(o => o.RecordComment).Width(200).Hidden();
                columns.Bound(o => o.RecordComment1).Width(200).Hidden();
                columns.Bound(o => o.RecordComment2).Width(200).Hidden();
                columns.Bound(o => o.RecordRework).Width(120).Hidden().Hidden();
                columns.Bound(o => o.RecordFAI).Width(130).Hidden().Hidden();
                columns.Bound(o => o.RecordServiceType).Width(140).Hidden();
                columns.Bound(o => o.RecordTransfer).Width(100).Title("Transferir");
                columns.Command(command => { command.Destroy().Text("Eliminar"); command.Edit().Text("Editar"); }).Width(190);
            })
            .Excel(excel => excel.FileName("Reportes - EMBARQUES (" + DateTime.Now.ToString("dd-MMM-yyyy") + ").xlsx").AllPages(true))
            .HtmlAttributes(new { style = "height: 650px" })
            .Events(e => { e.Edit("onEdit"); }) )
</div>

@using (Html.BeginForm("PackingList", "Reportes"))
{
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">
                        Packing List
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"> &times; </span>
                    </button>
                </div>

                <div class="modal-body py-5">
                    <div class="col-xs-6">
                        <div class="form-group py-5">
                            <h4>Ingrese el Tracking de Fedex</h4>
                            @(Html.Kendo().AutoCompleteFor(f => f.RecordFedexTracking)
                                    .Name("ParametroFedex")
                                    .DataTextField("RecordFedexTracking")
                                    .Filter(FilterType.StartsWith)
                                    .Events(e => e.Change("onChange"))
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("FillCombobox", "Reportes");
                                        })
                                            .ServerFiltering(false);
                                    })
                                    .HtmlAttributes(new { style = "width:90%;" })
                                    .Template("<i class='fa fa-sitemap' aria-hidden='true'></i><div class=\"k-state-default\" style=\"display: inline-block; \">#:data.RecordFedexTracking" + " #</div>") )
                        </div>
                    </div>
                    <br /><br />
                </div><br /><br />

                <div class="modal-footer">
                    <input type="submit" value="Generar" id="smtBtn" class="k-button k-primary" style="width: 20%; height:40px" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" style="width: 20%; height:40px">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
    }

<script>
    function onChange(e) {
        var found = false;
        var value = this.value();
        var data = this.dataSource.view();
        //console.log(this.dataSource.view());
        for (var idx = 0, length = data.length; idx < length; idx++) {
            console.log(data[idx]);
            if (data[idx].RecordFedexTracking === value) {
                found = true;
                break;
            }
        }

        if (!found) {
            this.value("");
            alert("Tracking invalido");
        }
    }

    $(document).ready(function () {
        $('#exampleModalCenter').on('shown.bs.modal', function () {
            var autocomplete = $("#ParametroFedex").data("kendoAutoComplete");
            autocomplete.focus();
        })

    });
</script>

<script>
    function FilterByDate() {
        return {
            starDate: $("#Inicio").val(),
            endDate: $("#Final").val()
        };
    }

    $('#btnSearch').on("click", function (e) {
        $("#grid").data("kendoGrid").dataSource.read();
        return false;
    });

    $("#smtBtn").click(function () {
        var autoCompleteValue = $("#ParametroFedex").val();
        if (autoCompleteValue == "" || autoCompleteValue == null) {
            alert("Ingrese un valor valido"); return false; //cancels submit action
        }
        // else let submit go through
    });
</script>

@section Scripts {
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>

    <script>
        function onEdit(e) {
            e.container.parent().find('.k-window-title').text( "Editar Registro");
        }
    </script>
}

<style>
    .k-edit-form-container {
        width: 650px;
    }
</style>

<style>

    #grid .k-grid-toolbar {
        padding: .75em 1.3em .8333em 1em;
    }

    .toolbar {
        float: right;
    }

    .indicador-Columna {
        background-color: #fdd;
    }
    .k-pdf-export .k-grid-toolbar,
    .k-pdf-export .k-grouping-header,
    .k-pdf-export .k-command-cell,
    .k-pdf-export .k-grid-top,
    .k-pdf-export .k-pager-wrap,
    .k-pdf-export .k-filter-row,
    .k-pdf-export .k-header-column-menu k-state-border-down {
        display: none;
    }

</style>
