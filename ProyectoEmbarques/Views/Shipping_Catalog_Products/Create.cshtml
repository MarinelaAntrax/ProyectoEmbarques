@model ProyectoEmbarques.Models.Shipping_Catalog_Products

@{
    ViewBag.Title = " Registra Productos ";
}
<h2 class="page-header"> @ViewBag.Title</h2>


@using (Html.BeginForm("Create", "Shipping_Catalog_Products", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
 
        <div class="form-group">
            @Html.Label("Area", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().ComboBox()
                                        .Name("AreaID")
                                        .DataTextField("AreaName")
                                        .DataValueField("AreaID")
                                        .Filter(FilterType.Contains)
                                        .Placeholder("Seleccione el Area")
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                          { read.Action("FillCombobox", "Areas"); })
                                          .ServerFiltering(false);
                                        })
                                        .HtmlAttributes(new { style = "width:50%;" }) )
                @Html.ValidationMessageFor(a=>a.AreaID)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Productos", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().ComboBox()
                                .Name("ProductName")
                                .DataTextField("DATA")
                                .DataValueField("ProductName")
                                .Placeholder("Seleccione el No. Parte")
                                .Filter(FilterType.Contains)
                                .DataSource(source =>
                                { source.Read(read =>
                                    { read.Action("FillCombobox", "VIEWDATA");  })
                                    .ServerFiltering(false); })
                                .HtmlAttributes(new { style = "width:50%;" }) )
                @Html.ValidationMessageFor(a=>a.ProductName)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Area Interna del Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().ComboBox()
                                        .Name("ProductInternalArea")
                                        .Filter("contains")
                                        .Placeholder("seleccione Area Interna")
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .BindTo(new List<SelectListItem>() {
                                        new SelectListItem() { Text = "Con Orden de Trabajo", Value = "1" },
                                        new SelectListItem() { Text = "WK o RM", Value = "2" },
                                        new SelectListItem() { Text = "Con Orden TID Serie", Value = "3" } })
                                        .SelectedIndex(3)
                                        .Suggest(false)
                                        .HtmlAttributes(new { style = "width:50%;" }) )
                @Html.ValidationMessageFor(a=>a.ProductInternalArea)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo del Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().ComboBox()
                                    .Name("ProductType")
                                    .Filter("contains")
                                    .Placeholder("Seleccione el Tipo")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .BindTo(new List<SelectListItem>() {
                                    new SelectListItem() { Text = "FG - Finished Good", Value = "FG - Finished Good" },
                                    new SelectListItem() { Text = "RM - Raw Material", Value = "RM - Raw Material" },
                                    new SelectListItem() {  Text = "WK - Wire Kits", Value = "WK - Wire Kits"}  })
                                    .SelectedIndex(3)
                                    .Suggest(false)
                                    .HtmlAttributes(new { style = "width:50%;" }) )
                @Html.ValidationMessageFor(a=>a.ProductType)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}


