@model ProyectoEmbarques.Models.AirGroundViewModel

<div style="margin:30px 0 0 0;">
    @if (Model.Variable)
    {
        <div class="row well" style="margin:0 150px 100px 150px;">
            <div class="col-lg-12">
                @using (Html.BeginForm("InsertData", "Grafica"))
                {
                    <div class="col-lg-3">
                        <div class="form-group">
                            @(Html.Label("Total"))
                            @(Html.Kendo().TextBoxFor(fo => fo.TotalinShip)
                                            .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }))
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <br />
                            <input name="Submit" class="k-button" value="Generar" type="submit" />
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="row well" style="margin:0 150px 150px 150px;">
            <div class="col-lg-12">
                <button style="margin:0;" type="button" class="close"  data-toggle="modal" data-target="#ModalTotals"><span aria-hidden="true"><i class="fa fa-info-circle"></i></span></button>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.Label("Fecha de inicio")
                        @(Html.Kendo().DatePicker()
                                .Name("fechaInicio")
                                .DisableDates(DayOfWeek.Saturday, DayOfWeek.Sunday)
                                .Events(ev => ev.Open("Open"))
                                .Value(System.DateTime.Today.AddDays(-1)).Max(System.DateTime.Today.AddDays(-1))
                                .HtmlAttributes(new { style = "width:90%;" }))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.Label("Fecha final")
                        @(Html.Kendo().DatePicker()
                                .Name("fechaFinal")
                                .DisableDates(DayOfWeek.Saturday, DayOfWeek.Sunday)
                                .Events(ev => ev.Open("Open"))
                                .Value(System.DateTime.Now).Max(System.DateTime.Today)
                                .HtmlAttributes(new { style = "width:90%;" }))
                    </div>
                </div>

                <div class="col-lg-2">
                    <div class="form-group">
                        <br />
                        <a id="btnSearch" class="k-button k-button-icontext" href="#"> Generar </a>
                    </div>
                </div>

                <div class="col-lg-2">
                    <div class="form-group">
                        <br />
                        <a class="k-button k-button-icontext" href="@Url.Action("Historico", "Grafica")"><span></span>Historico</a>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="form-group">
                        <br />
                       
                    </div>
                </div>

            </div>
        </div>
        <div class="k-content demo-section" style="margin:0 20px 0 20px;padding:0;">
            <button style="margin:0 0 0;" class='export-pdf k-button'>Exportar PDF</button>
            @(Html.Kendo().Chart<ProyectoEmbarques.Models.AirGroundViewModel>()
                    .Name("chart")
                    .Title("Overnight shipments Air VS. Ground by Pieces")
                    .DataSource(data => data
                    .Read(rd => rd.Action("ReadServiceType", "Grafica").Data("FilterByDate")))
                    .Legend(legend => legend
                    .Position(ChartLegendPosition.Right))
                    .Series(series =>
                    {
                        series
                            .Column(model => model.FedExGround)
                            .Stack("yes")
                            .Color("#0F80DE")
                            .Name("FedEx Ground")
                            .Labels(labels => labels.Format("{0}").Visible(true).Position(ChartBarLabelsPosition.Center).Background("transparent"))
                            .Axis("New");

                        series
                            .Column(model => model.FedExAir)
                            .Stack("yes")
                            .Color("#E2060D")
                            .Name("FedEx Air")
                            .Labels(labels => labels.Format("{0}").Visible(true).Position(ChartBarLabelsPosition.Center).Background("transparent"))
                            .Axis("New");

                        series
                            .Column(model => model.Porcentaje)
                            .Stack("yes")
                            .Name("Ratio Ground")
                            .Color("#C0C0C0").Opacity(0.0)
                            .Labels(labels => labels.Format("{0}%").Visible(true).Background("transparent"));

                        series
                            .Column(model => model.NewScans)
                            .Stack("Yellow")
                            .Name("New Scans")
                            .Labels(labels => labels.Format("{0}").Visible(true).Position(ChartBarLabelsPosition.Center).Background("transparent"))
                            .Color("#F3B934")
                            .Axis("New");

                        series
                            .Line(model => model.TotalinShip)
                            .Name("Total in Ship")
                            .Labels(labels => labels.Format("{0}").Visible(true))
                            .Color("#0A6DBF")
                            .Axis("total");
                    })
                        .AutoBind(true)
                        .CategoryAxis(axis => axis
                        .Categories(model => model.FechaDia).AxisCrossingValue(0, 10))
                        .ValueAxis(axis => axis.Numeric("New").Min(0))
                        .ValueAxis(axis => axis.Numeric("total").Min(0))
                        .Tooltip(tooltip => tooltip
                        .Visible(true)))
        </div>
    }
</div>


<div class="modal fade" id="ModalTotals" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="exampleModalLongTitle">
                    Explicación de la grafica
                </h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"> &times; </span>
                </button>
            </div>

            <div class="row modal-body py-5">
                <div class="col-xs-12 form-group py-5">
                    <p><b> Fedex Air:</b> Son los envios por aire.</p>

                    <p><b>Fedex Ground:</b> Son los envios por tierra.</p>

                    <p><b>Ratio Ground:</b> Es el porcentaje este se saca
                        (FedexGroundActual/suma(FedexGroundActual + FedexAirActual)*100).</p>

                    <p><b>New Scans:</b> Este dato se saca (TotalinShipAnterior -
                        (TotalEmbarcadoAnterior(FedexGroundAnterior + FedexAirAnterior) - TotalinShipActual)* -1).</p>

                    <p><b>TotalinShip:</b> Son los pedidos que tienen por dia, les llega por medio de un correo muy temprano.</p>
                </div> 
                <br /><br />
            </div><br /><br />

            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

<script>
    function FilterByDate() {
        return {
            starDate: $("#fechaInicio").val(),
            endDate: $("#fechaFinal").val()
        };
    }
    $('#btnSearch').on("click", function (e) {
        $("#chart").data("kendoChart").dataSource.read();
        return false;
    });
</script>

<script>
    function Open() {
        $('.k-weekend a').bind('click', function () {
            return false;
        });
    }
</script>

<script>
    $(".export-pdf").click(function ()
    {
        var chart = $("#chart").getKendoChart();
        chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data)
        {
            kendo.saveAs(
            {
                dataURI: data,
                fileName: "Overnight shipments Air VS. Ground by Pieces.pdf",
                proxyURL: "@Url.Action("Export_Save", "Grafica")"
            });
        });
     });
</script>