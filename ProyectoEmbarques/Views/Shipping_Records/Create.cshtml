@model ProyectoEmbarques.Models.Shipping_RecordsViewModel

@{
    ViewBag.Title = "Embarques";
}

<h2 class="page-header"> @ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Shipping_Records", FormMethod.Post, new { id = "SealDiferentes" }))
{
    @Html.ValidationSummary(true);
    @Html.AntiForgeryToken()
    <div class="form-horizontal telerik-controls">
        <div class="col-lg-12">
                <div class="row">
                    <div class="col-lg-3">
                        <h4>No. Parte</h4>
                        <div class="form-group">
                            @(Html.Kendo().ComboBoxFor(fo => fo.ProductID)
                                    .Name("ProductID")
                                    .Value(Model.ProductID == 0 ? string.Empty : Model.ToString())
                                    .Placeholder("Seleccione no.pieza...")
                                    .DataTextField("ProductName")
                                    .DataValueField("ProductID")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("FillCombobox", "Shipping_Catalog_Products");
                                        })
                                            .ServerFiltering(true);
                                    })
                                    .HtmlAttributes(new { style = "width:90%;" })
                                    .Events(ev => ev.Change("onChangePID"))
                                    .Template("<i class='fa fa-check' aria-hidden='true'></i><div class=\"k-state-default\" style=\"display: inline-block; \">#:data.ProductName" + " #</div>") )
                            @(Html.ValidationMessageFor(nam => nam.ProductID))
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4> Área </h4>
                            @(Html.Kendo().TextBox()
                                    .Name("AreaName")
                                    .HtmlAttributes(new { id = "AreaName", style = "width:90%", @readonly = "readonly" }) )
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Fecha de Embarque</h4>
                            @(Html.Kendo().DatePickerFor(model => model.RecordDate)
                                    .Name("RecordDate")
                                    .Value(DateTime.Today).Format("dd MMM yyyy")
                                    .HtmlAttributes(new { style = "width:90%", title = "datepicker" }) )
                            @(Html.ValidationMessageFor(nam => nam.RecordDate, "", new { @class = "text-danger" }))
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Tracking de FedEx</h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordFedexTracking")
                                    .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                            @(Html.ValidationMessageFor(nam => nam.RecordFedexTracking))
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Orden de Trabajo</h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordWorkOrder")
                                    .HtmlAttributes(new { id = "idOrdendeTrabajo",type = "number", style = "opacity:0.8;width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                        </div>
                    </div>
                    <div class="col-lg-3" style="">
                        <div class="form-group">
                            <h4>No. Serie</h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordSerialNo")
                                    .HtmlAttributes(new {id = "IdRecordSerialNo", style = "width:90%;opacity:0.8;" }) )
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Retrabajo</h4>
                            @(Html.CheckBoxFor(fo=>fo.RecordRework,new {@id= "RecordRework" }))
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4> No. de Caja C. Doc. </h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordControlBoxNo")
                                    .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }))
                            @(Html.ValidationMessageFor(nam => nam.RecordControlBoxNo))
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Tracking de Papelería</h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordTrackingId")
                                    .HtmlAttributes(new { id = "idTrackingPapeleria", type = "number", style = "opacity:0.8;width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Cantidad</h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordQuantity")
                                    .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" })
                                    .Value("1") )
                            @(Html.ValidationMessageFor(nam => nam.RecordQuantity))
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>No. de Caja Piezas</h4>
                            @(Html.Kendo().TextBox()
                                    .Name("RecordPieceBoxNo")
                                    .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                            @(Html.ValidationMessageFor(nam => nam.RecordPieceBoxNo))
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Tipo de Embarque</h4>
                            @(Html.Kendo().DropDownList()
                                    .Name("ShipmentTypeID")
                                    .DataTextField("ShipmentType")
                                    .DataValueField("ShipmentTypeID")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("FillCombobox", "CatalogShipmentType");
                                        })
                                            .ServerFiltering(false);
                                    })
                                    .HtmlAttributes(new { style = "width:90%;" })
                                    .Template("<i class='fa fa-plane' aria-hidden='true'></i><div class=\"k-state-default\" style=\"display: inline-block; \">#:data.ShipmentType #</div>") )
                            @(Html.ValidationMessageFor(nam => nam.ShipmentTypeID) )
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Dirigido a</h4>
                            @(Html.Kendo().ComboBoxFor(mod => mod.ClientID)
                                    .Name("ClientID")
                                    .Placeholder("Seleccione cliente...")
                                    .DataTextField("ClientName")
                                    .DataValueField("ClientID")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("Fillcombobox", "Clientes");
                                        })
                                            .ServerFiltering(false);
                                    })
                                    .HtmlAttributes(new { style = "width:90%;" })
                                    .Template("<i class='fa fa-user' aria-hidden='true'></i> <div class=\"k-state-default\"  style=\"display: inline-block; \">#: data.ClientName #</div>") )
                            @(Html.ValidationMessageFor(nam => nam.ClientID) )
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Compañía</h4>
                            @(Html.Kendo().TextBoxFor(f=>f.Clients.ClientCompany)
                                    .Name("Compania")
                                    .HtmlAttributes(new { id = "Compania", style = "width:90%", @readonly = "readonly" }) )
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Tipo de Servicio</h4>
                            @(Html.Kendo().DropDownList()
                                    .Name("RecordServiceType")
                                    .OptionLabel("Seleccione servicio...")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .BindTo(new List<SelectListItem>()
                                    {
                                            new SelectListItem() { Text = "PRIORITY" , Value= "FEDEX AIR" },
                                            new SelectListItem() { Text = "GROUND" , Value= "FEDEX GROUND PARCEL"}
                                    })
                                    .HtmlAttributes(new { style = "width:90%;" }) )
                            @(Html.ValidationMessageFor(nam => nam.RecordServiceType) )
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>FAI(Primera Pieza)</h4>
                            @(Html.CheckBoxFor(fo => fo.RecordFAI))
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <h4>Transferir</h4>
                            @(Html.Kendo().DropDownList()
                                    .Name("RecordTransfer")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .BindTo(new List<SelectListItem>()
                                    {
                                            new SelectListItem() { Text = "TRANSFERIR" , Value="TRANSFERIR"},
                                            new SelectListItem() { Text = "NO TRANSFERIR" , Value="NO TRANSFERIR"}
                                    })
                                    .SelectedIndex(3)
                                    .HtmlAttributes(new { style = "width:90%;" }) )
                        </div>
                    </div>

                    <div class="col-lg-9" style="padding:0;">
                        <div class="col-lg-4">
                            <div class="form-group">
                                <h4>Sellos de seguridad </h4>
                                @Html.TextBoxFor(tb => tb.RecordSeguritySeal1, new { @class = "k-textbox", style = "width:90%;" })
                            </div>
                        </div>
                        <div class="col-lg-4"></div>
                        <div class="col-lg-4"></div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4">
                        <div class="form-group">
                            <h4>Comentarios</h4>
                            @Html.TextArea("RecordComment", "", new { maxlength = 250, @class = "k-textbox ", style = "min-width: 90%; min-height:90px; max-width: 90%; max-height:90px;" })
                            <p id="alert"></p>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="form-group">
                            <h4>Comentarios 1</h4>
                            @Html.TextArea("RecordComment1", "", new { maxlength = 250, @class = "k-textbox", style = "min-width: 90%; min-height:90px; max-width: 90%; max-height:90px;" })
                            <p id="1alert"></p>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="form-group">
                            <h4>Comentarios 2</h4>
                            @Html.TextArea("RecordComment2", "", new { maxlength = 250, @class = "k-textbox", style = "min-width: 90%; min-height:90px; max-width: 90%; max-height:90px;" })
                            <p id="2alert"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            <div class="form-group">
                <center>
                    <br />
                    <input type="submit" value="Guardar" id="sbmtbtn" class="k-button k-primary" style="width: 20%; height:40px" />
                </center>
            </div>
        </div>
 }

<script>
    $(document).ready(function () {
        var autocomplete = $("#ProductID").data("kendoComboBox");
        autocomplete.focus();
    });

    $("#SealDiferentes").kendoValidator().data("kendoValidator");
    $("#RecordDate").prop("readonly", true);

function onChangePID(ev) {
    var item = this.dataItem(ev.item);

    var elem1 = item.WOrder;
    var elem2 = item.WKRMSerie;
    var elem3 = item.TIDSerie;
    if (elem1) {
        document.getElementById("idOrdendeTrabajo").disabled = false;
        document.getElementById("idOrdendeTrabajo").required = true;
        document.getElementById("idOrdendeTrabajo").style.opacity = "1";
    } else {
        document.getElementById("idOrdendeTrabajo").disabled = true;
        document.getElementById("idOrdendeTrabajo").style.opacity = "0.8";
        document.getElementById("idOrdendeTrabajo").required = false;
    }
    if (elem2) {
        document.getElementById("IdRecordSerialNo").disabled = false;
        document.getElementById("IdRecordSerialNo").required = true;
        document.getElementById("IdRecordSerialNo").style.opacity = "1";
    } else {
        document.getElementById("IdRecordSerialNo").disabled = true;
        document.getElementById("IdRecordSerialNo").style.opacity = "0.8";
        document.getElementById("IdRecordSerialNo").required = false;
    }
    if (elem3) {
        document.getElementById("idTrackingPapeleria").disabled = false;
        document.getElementById("idTrackingPapeleria").required = true;
        document.getElementById("idTrackingPapeleria").style.opacity = "1";
    } else {
        document.getElementById("idTrackingPapeleria").disabled = true;
        document.getElementById("idTrackingPapeleria").style.opacity = "0.8";
        document.getElementById("idTrackingPapeleria").required = false;
    }
    document.getElementById("idTrackingPapeleria").value = "";
    document.getElementById("idOrdendeTrabajo").value = "";
    document.getElementById("IdRecordSerialNo").value = "";
}
</script>

<script>
    //$(document).ready(function () { });
    $("#ProductID").kendoComboBox();
var combobox = $("#ProductID").data("kendoComboBox");
    $(document).ready(function () {
        combobox.input.keydown(function (e) {
        if (e.keyCode == 13 || e.keyCode == 9) {
            if (!$("#idOrdendeTrabajo").prop('disabled')) {
                    $("#idOrdendeTrabajo").focus();
            } else {
                if (!$("#IdRecordSerialNo").prop('disabled')) {
                        $("#IdRecordSerialNo").focus();
                } else {
                        $("#idTrackingPapeleria").focus();
                }
            }
            e.preventDefault()
        
            return false;
        }
    });
});
    
    var TextOrder = $("#idOrdendeTrabajo");
    $(document).ready(function () {
        TextOrder.keydown(function (e) {
        if (e.keyCode == 13 || e.keyCode == 9) {
            $("#IdRecordSerialNo").focus();
            e.preventDefault()
        
            return false;
        }
    });
});

    var TextPapeleria = $("#IdRecordSerialNo");
    $(document).ready(function () {
        TextPapeleria.keydown(function (e) {
        if (e.keyCode == 13 || e.keyCode == 9) {
                $("#idTrackingPapeleria").focus();

            e.preventDefault()
        return false;
        }
    });

});

    $("#ProductID").change(function (){
    if ($("#ProductID").val() === "")
        {
            $("#AreaName").val("");
    }
            else
        {
            $.ajax(
            {
            data: { id: $("#ProductID").val() },//Parametros de entrada
                type: 'GET',
                url: '@Url.Action("GetAreaName","Shipping_Catalog_Products")',
                success: function (Content)
                {
                    $("#AreaName").val(Content);
            },
                    error: function ()
                    {
                //alert("Error while inserting data");
            }
        });
    }
});
    $('#RecordComment').on('keydown', function (e) {
        if (e.keyCode == 9) e.preventDefault()
    });
        /*comentarios*/
    $('#RecordComment').keyup(function (e)
    {
    
    var dim = this.value.length;
    if (dim === 250)
    {
        document.getElementById("alert").innerHTML = "El comentario no puede contener tantos caracteres";
    }
    else
    {
        document.getElementById("alert").innerHTML = "Quedan " + (250 - dim) + " caracteres";
    }
});

    $('#RecordComment1').keyup(function ()
    {
    var dim = this.value.length;
    if (dim === 250)
    {
        document.getElementById("1alert").innerHTML = "El comentario no puede contener tantos caracteres";
    }
    else
    {
        document.getElementById("1alert").innerHTML = "Quedan " + (250 - dim) + " caracteres";
    }
});

    $('#RecordComment2').keyup(function ()
    {
    var dim = this.value.length;
    if (dim === 250)
    {
        document.getElementById("2alert").innerHTML = "El comentario no puede contener tantos caracteres";
    }
    else
    {
        document.getElementById("2alert").innerHTML = "Quedan " + (250 - dim) + " caracteres";
    }
});
</script>
@* -----------------------------------------Notificaciones--------------------------------------------------- *@
@(Html.Kendo().Notification()
        .Name("notification")
        .Position(p => p.Pinned(true).Top(30).Right(30))
        .Stacking(NotificationStackingSettings.Down)
        .AutoHideAfter(3000)
        .Templates(t =>
        {
            t.Add().Type("upload-success").ClientTemplateID("successTemplate");
            t.Add().Type("error").ClientTemplateID("errorTemplate");

        })
)
<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="/Content/Images/success.png" />
        <h4 style="color:white;">#= message #</h4>
    </div>
</script>

<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong">
        <img src="/Content/Images/error.png" />
        <h4 style="color:white;">#= message #</h4>
    </div>
</script>

@if (ViewBag.showMs == 1)
{
    <script>
        $(document).ready(function ()
        {
            $("#notification").data("kendoNotification").show(
                {
                    message: "registro guardado"
                }, "upload-success");
        });

    </script>
    ViewBag.showMs = 0;
}
else if (ViewBag.showMs == 2)
{
    <script>
        $(document).ready(function ()
        {
            $("#notification").data("kendoNotification").show(
                {
                    message: "Error al procesar solicitud"
                }, "error");
        });
    </script>
    ViewBag.showMs = 0;
}
else if (ViewBag.showMs == 3)
  {
    <script>
        $(document).ready(function () {
            var elem = document.getElementById("idOrdendeTrabajo");

            $("#notification").data("kendoNotification").show(
                {
                    message: "Orden de trabajo ya existe en el sistema"
                }, "error");
        });
        if (elem.val >= 0) {
            elem.disabled = false;
        } else {
            elem.disabled = true;
        }
        ViewBag.showMs = 0;
    </script>
}
else if (ViewBag.showMs == 4)
{
      <script>
        $(document).ready(function () {
            $("#notification").data("kendoNotification").show(
                {
                    message: "Tracking de papeleria ya existe en el sistema"
                }, "error");
        });
      </script>
       ViewBag.showMs = 0;
    }
    
<style>
    input[type=checkbox] {
        /* Double-sized Checkboxes */
        -ms-transform: scale(2); /* IE */
        -moz-transform: scale(2); /* FF */
        -webkit-transform: scale(2); /* Safari and Chrome */
        -o-transform: scale(2); /* Opera */
        padding: 5px;
    }

    /* Might want to wrap a span around your checkbox text */
    .checkboxtext {
        /* Checkbox text */
        font-size: 110%;
        display: inline;
    }
    .k-notification 
    {
        border: 0;
    }
    /* Error template */
    .k-notification-error.k-group 
    {
        background: rgba(100%,0%,0%,.7);
        color: #FFFFFF;
    }
    .wrong 
    {
        width: 240px;
        height: 100px;
        padding: 0 30px;
        line-height: 100px;
    }
    .wrong h4 
    {
        font-size: 1em;
        padding: 32px 10px 5px;
    }
    .wrong img 
    {
        float: left;
        margin: 30px 15px 30px 30px;
    }
    /* Info template */
    .k-notification-info.k-group
    {
        background: rgba(0%,0%,0%,.7);
        color: #FFF;
    }
    /* Success template */
    .k-notification-upload-success 
    {
        background: rgba(0%,60%,0%,.7);
        color: #FFF;
    }
    .upload-success
    {
        width: 240px;
        height: 100px;
        padding: 0 30px;
        line-height: 100px;
    }
    .upload-success h4
    {
        font-size: 1em;
        font-weight: normal;
        display: inline-block;
        vertical-align: middle;
    }
    .upload-success img 
    {
        display: inline-block;
        vertical-align: middle;
        margin-right: 10px;
    }
</style>
