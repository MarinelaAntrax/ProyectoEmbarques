@model ProyectoEmbarques.Models.Shipping_RecordsViewModel

@{
    ViewBag.Title = "Embarque de Ensambles";
}

<h2 class="page-header"> @ViewBag.Title</h2>

@using (Html.BeginForm())
 {
    @Html.ValidationSummary(true);
    @Html.AntiForgeryToken()

    <div class="col-lg-12">
        <div id="MainForm">
            <br />
            <div class="row">
                <div class="col-lg-3">
                    <h4>No. Parte</h4>
                    <div class="form-group">
                        @(Html.Kendo().DropDownListFor(fo => fo.ProductID)
                                .Name("ProductID")
                                .OptionLabel("Seleccione No.Pieza...")
                                .DataTextField("ProductName")
                                .DataValueField("ProductID")
                                .Filter(FilterType.Contains)
                                .AutoBind(false)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("FillCombobox", "Shipping_Catalog_Products");
                                    })
                                    .ServerFiltering(false);
                                })
                                .HtmlAttributes(new { style = "width:90%;" })
                                .ValueTemplate("<i class='fa fa-check' aria-hidden='true'></i><div class=\"k-state-default\" style=\"display: inline-block; \">#:data.ProductName" + " #</div>") )
                        @(Html.ValidationMessageFor(nam => nam.ProductID))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4> Area </h4>
                        @(Html.Kendo().TextBox()
                                .Name("AreaName")
                                .HtmlAttributes(new { id = "AreaName", style = "width:90%", @readonly = "readonly" }) )
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Fecha de Embarque</h4>
                        @(Html.Kendo().DatePickerFor(model => model.RecordDate)
                                .Name("RecordDate")
                                .Value(DateTime.Today).Format("dd MMM yyyy")
                                .HtmlAttributes(new { style = "width:90%", title = "datepicker" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordDate, "", new { @class = "text-danger" }))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Tracking de Fedex</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordFedexTracking")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordFedexTracking))
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Orden de Trabajo</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordWorkOrder")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>No. Serie</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordSerialNo")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>FAI(Primera Pieza)</h4><center>
                            @(Html.Kendo().CheckBox()
                                    .Name("RecordFAI")
                                    .HtmlAttributes(new { style = "width:300%; height:500px" }) )
                        </center>
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>No. de Caja C. Doc.</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordControlBoxNo")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }))
                        @(Html.ValidationMessageFor(nam => nam.RecordControlBoxNo))
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Tracking de Papeleria</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordTrackingId")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Cantidad</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordQuantity")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordQuantity))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>No. de Caja Piezas</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordPieceBoxNo")
                                .HtmlAttributes(new { type = "number", style = "width:90%", onkeydown = "javascript: return event.keyCode == 69 ? false : true" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordPieceBoxNo))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Tipo de Embarque</h4>
                        @(Html.Kendo().DropDownList()
                                .Name("ShipmentTypeID")
                                .DataTextField("ShipmentType")
                                .DataValueField("ShipmentTypeID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("FillCombobox", "CatalogShipmentType");
                                    })
                                    .ServerFiltering(false);
                                })
                                .HtmlAttributes(new { style = "width:90%;" })
                                .ValueTemplate("<i class='fa fa-plane' aria-hidden='true'></i><div class=\"k-state-default\" style=\"display: inline-block; \">#:data.ShipmentType #</div>") )
                        @(Html.ValidationMessageFor(nam => nam.ShipmentTypeID))
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Dirigido a</h4>
                        @(Html.Kendo().DropDownListFor(mod => mod.ClientID)
                                .Name("ClientID")
                                .OptionLabel("Seleccione Cliente...")
                                .DataTextField("ClientName")
                                .DataValueField("ClientID")
                                .Filter(FilterType.Contains)
                                .AutoBind(false)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    { read.Action("Fillcombobox", "Clientes"); })
                                        .ServerFiltering(false);
                                })
                                .HtmlAttributes(new { style = "width:90%;" })
                                .ValueTemplate("<i class='fa fa-user' aria-hidden='true'></i> <div class=\"k-state-default\"  style=\"display: inline-block; \">#: data.ClientName #</div>") )
                            @(Html.ValidationMessageFor(nam => nam.ClientID))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Compañia</h4>
                        @(Html.Kendo().TextBox()
                                .Name("Compania")
                                .HtmlAttributes(new { id = "Compania", style = "width:90%", @readonly = "readonly" }) )
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Tipo de Servicio</h4>
                        @(Html.Kendo().DropDownList()
                                .Name("RecordServiceType")
                                .OptionLabel("Seleccione Servicio...")
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .BindTo(new List<SelectListItem>() {
                                            new SelectListItem() { Text = "Priority" , Value="FEDEX AIR" },
                                            new SelectListItem() { Text = "Ground" , Value="FEDEX GROUND PARCEL"} })

                                .HtmlAttributes(new { style = "width:90%;" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordServiceType))
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Retrabajo</h4><center>
                            @(Html.Kendo().CheckBox()
                                    .Name("RecordRework")
                                    .HtmlAttributes(new { style = "width:300%; height:500px" }) )
                        </center>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <h4>Transferir</h4>
                        @(Html.Kendo().DropDownList()
                                .Name("RecordTransfer")
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .BindTo(new List<SelectListItem>() {
                                            new SelectListItem() { Text = "Transferir" , Value="TRANSFERIR"},
                                            new SelectListItem() { Text = "No Transferir" , Value="NO TRANSFERIR"} })
                                .SelectedIndex(3)
                                .Value("TRANSFERIR")
                                .HtmlAttributes(new { style = "width:90%;" }) )
                    </div>

                    <div class="form-group">
                        <h4>Sello de Seguridad 1</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordSeguritySeal1")
                                .HtmlAttributes(new { style = "width:90%" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordSeguritySeal1))
                    </div>

                    <div class="form-group">
                        <h4>Sello de Seguridad 2</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordSeguritySeal2")
                                .HtmlAttributes(new { style = "width:90%" }))
                        @(Html.ValidationMessageFor(nam => nam.RecordSeguritySeal2))
                    </div>

                    <div class="form-group">
                        <h4>Sello de Seguridad 3</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordSeguritySeal3")
                                .HtmlAttributes(new { style = "width:90%" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordSeguritySeal3))
                    </div>

                    <div class="form-group">
                        <h4>Sello de Seguridad 4</h4>
                        @(Html.Kendo().TextBox()
                                .Name("RecordSeguritySeal4")
                                .HtmlAttributes(new { style = "width:90%" }) )
                        @(Html.ValidationMessageFor(nam => nam.RecordSeguritySeal4))
                    </div>
                </div>

                <div class="col-xl-9">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <h4>Comentarios</h4>
                                @Html.TextArea("RecordComment", "", new { maxlength = 250, @class = "k-textbox", style = "min-width: 85%; min-height:345px; max-width: 85%; max-height:345px;" })
                                <p id="alert"></p>
                            </div>
                        </div>

                        <div class="col-lg-3">
                            <div class="form-group">
                                <h4>Comentarios 1</h4>
                                @Html.TextArea("RecordComment1", "", new { maxlength = 250, @class = "k-textbox", style = "min-width: 85%; min-height:345px; max-width: 85%; max-height:345px;" })
                                <p id="1alert"></p>
                            </div>
                        </div>

                        <div class="col-lg-2">
                            <div class="form-group">
                                <h4>Comentarios 2</h4>
                                @Html.TextArea("RecordComment2", "", new { maxlength = 250, @class = "k-textbox", style = "min-width: 130%; min-height:345px; max-width: 130%; max-height:345px;" })
                                <p id="2alert"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            <div class="form-group">
                <center>
                    <br />
                    <input type="submit" value="Guardar" class="k-button k-primary" style="width: 20%; height:40px" />
                </center>
            </div>
        </div>
    </div>
 }

<script>
    $("Mainform").kendoValidator();
    $("#RecordDate").prop("readonly", true);
</script>
<script>
        $(document).ready(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetMaxControlBox", "Shipping_Catalog_Products")', //Vinculacion con caracteristicas de ASP.Net
                success: function (Content) {
                    $("#RecordControlBoxNo").val(Content);
                }, error: function () {
                    alert("Error while GettingMaxControlBox");
                }
            });
        });

       $(document).ready(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetMaxFedexTracking", "Shipping_Catalog_Products")', //Vinculacion con caracteristicas de ASP.Net
                success: function (Content) {
                    $("#RecordFedexTracking").val(Content);
                }, error: function () {
                    alert("Error while GettingMaxFedexTracking");
                }
            });
       });

       $(document).ready(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetMaxPieceBoxNo", "Shipping_Catalog_Products")', //Vinculacion con caracteristicas de ASP.Net
                success: function (Content) {
                    $("#RecordPieceBoxNo").val(Content);
                }, error: function () {
                    alert("Error while GettingMaxPieceBoxNo");
                }
            });
       });

    $("#ProductID").change(function () {
        if ($("#ProductID").val() === "") {
            $("#AreaName").val("");
        } else {
            $.ajax({
                data: { id: $("#ProductID").val() },//Parametros de entrada
                type: 'GET',
                url: '@Url.Action("GetAreaName","Shipping_Catalog_Products")', //Vinculacion con caracteristicas de ASP.Net
                success: function (Content) {
                    $("#AreaName").val(Content);
                }, error: function () {
                    alert("Error while inserting data");
                }
            });
        }
    });

    $("#ClientID").change(function () {
        if ($("#ClientID").val() === "") {
            $("#Compania").val("");
        } else {
            $.ajax({
                data: { id: $("#ClientID").val() },//Parametros de entrada
                type: 'GET',
                url: '@Url.Action("GetCompania","Clientes")', //Vinculacion con caracteristicas de ASP.Net
                success: function (Content) {
                    $("#Compania").val(Content);
                }, error: function () {
                    alert("Error while inserting data");
                }
            });
        }
    });

        /*comentarios*/
    $('#RecordComment').keyup(function () {
        var dim = this.value.length;
        if (dim === 250) {
            document.getElementById("alert").innerHTML = "El comentario no puede contener tantos caracteres";
        } else {
            document.getElementById("alert").innerHTML = "Quedan " + (250 - dim) + " caracteres";
        }
    });

    $('#RecordComment1').keyup(function () {
        var dim = this.value.length;
        if (dim === 250) {
            document.getElementById("1alert").innerHTML = "El comentario no puede contener tantos caracteres";
        } else {
            document.getElementById("1alert").innerHTML = "Quedan " + (250 - dim) + " caracteres";
        }
    });

    $('#RecordComment2').keyup(function () {
        var dim = this.value.length;
        if (dim === 250) {
            document.getElementById("2alert").innerHTML = "El comentario no puede contener tantos caracteres";
        } else {
            document.getElementById("2alert").innerHTML = "Quedan " + (250 - dim) + " caracteres";
        }
    });
</script>